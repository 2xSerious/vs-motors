[{"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\index.js":"1","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\App.js":"2","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\reportWebVitals.js":"3","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\Customers.js":"4","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\Header.js":"5","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\customerForm.js":"6","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\customerList.js":"7","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\customerUpdate.js":"8","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\suppliers\\Suppliers.js":"9","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\suppliers\\supplierForm.js":"10","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\suppliers\\supplierList.js":"11","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\workers\\Workers.js":"12","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\workers\\WorkerForm.js":"13","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\workers\\WorkerList.js":"14","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\Vehicles.js":"15","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\VehicleForm.js":"16","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\VehicleList.js":"17","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\VehicleUpdate.js":"18","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\Orders.js":"19","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\OrdersForm.js":"20","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\orderPartlist.js":"21","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\js\\helpers.js":"22","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\OrdersList.js":"23","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\PartModal.js":"24"},{"size":881,"mtime":1633776533596,"results":"25","hashOfConfig":"26"},{"size":968,"mtime":1634128234763,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2947,"mtime":1634130526083,"results":"29","hashOfConfig":"26"},{"size":1111,"mtime":1633961735478,"results":"30","hashOfConfig":"26"},{"size":2016,"mtime":1633708613205,"results":"31","hashOfConfig":"26"},{"size":1545,"mtime":1634130269787,"results":"32","hashOfConfig":"26"},{"size":5321,"mtime":1634130437270,"results":"33","hashOfConfig":"26"},{"size":1961,"mtime":1633707691131,"results":"34","hashOfConfig":"26"},{"size":1027,"mtime":1633706864467,"results":"35","hashOfConfig":"26"},{"size":1765,"mtime":1633707925850,"results":"36","hashOfConfig":"26"},{"size":1915,"mtime":1633771672971,"results":"37","hashOfConfig":"26"},{"size":1017,"mtime":1633771242194,"results":"38","hashOfConfig":"26"},{"size":1751,"mtime":1633771663474,"results":"39","hashOfConfig":"26"},{"size":3057,"mtime":1633954202250,"results":"40","hashOfConfig":"26"},{"size":4259,"mtime":1633942073432,"results":"41","hashOfConfig":"26"},{"size":1934,"mtime":1633955113430,"results":"42","hashOfConfig":"26"},{"size":7184,"mtime":1634130554892,"results":"43","hashOfConfig":"26"},{"size":2491,"mtime":1634280959946,"results":"44","hashOfConfig":"26"},{"size":9565,"mtime":1634219602227,"results":"45","hashOfConfig":"26"},{"size":890,"mtime":1634106487318,"results":"46","hashOfConfig":"26"},{"size":205,"mtime":1634108760152,"results":"47","hashOfConfig":"26"},{"size":3232,"mtime":1634282335010,"results":"48","hashOfConfig":"26"},{"size":5701,"mtime":1634283818624,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"xfjo7h",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\index.js",[],["103","104"],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\App.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\reportWebVitals.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\Customers.js",["105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CreateClient from \"./customerForm\";\r\nimport GetClientList from \"./customerList\";\r\nimport { MDBContainer, MDBIcon } from \"mdbreact\";\r\n\r\nfunction Customers() {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [submit, setSubmit] = useState(false);\r\n  const [validation, setValidation] = useState(true);\r\n\r\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,})+$/;\r\n  const phoneRegex = /^[0-9]*$/;\r\n  useEffect(() => {\r\n    getCustomers();\r\n    setSubmit(false);\r\n  }, [submit]);\r\n\r\n  async function getCustomers() {\r\n    const res = await axios.get(\"http://localhost:3001/clients/\");\r\n    let data = res.data.response;\r\n    if (data.length > 0) {\r\n      setCustomers(data);\r\n    }\r\n  }\r\n  // HANDLE INPUTS\r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleChangePhone = (e) => {\r\n    let phone = e.target.value;\r\n    if (phoneRegex.test(phone)) {\r\n      setPhone(phone);\r\n      setValidation(true);\r\n    } else {\r\n      setPhone(phone);\r\n      setValidation(false);\r\n    }\r\n  };\r\n  const handleChangeEmail = (e) => {\r\n    let email = e.target.value;\r\n    if (emailRegex.test(email)) {\r\n      setEmail(email);\r\n      return true;\r\n    } else {\r\n      setEmail(email);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // HANDLE SUBMIT\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\") {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n\r\n    if (!validation) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n    insertClient(); // create user API\r\n    clearFields(); // Clear input fields\r\n    toggleSubmit(); // Update list After Submit\r\n  };\r\n\r\n  function toggleSubmit() {\r\n    setSubmit(!submit);\r\n  }\r\n\r\n  async function insertClient() {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/clients/\", {\r\n        cName: name,\r\n        phone: phone,\r\n        email: email,\r\n      });\r\n    } catch (error) {\r\n      alert(\"Customer already exist\");\r\n    }\r\n  }\r\n\r\n  function clearFields() {\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n  }\r\n\r\n  return (\r\n    <MDBContainer className=\"mt-5\">\r\n      <MDBContainer className=\"d-flex flex-column align-items-center mb-3 \">\r\n        <MDBIcon size=\"5x\" icon=\"users\" />\r\n        <div>\r\n          <h1>Customers</h1>\r\n        </div>\r\n      </MDBContainer>\r\n      <CreateClient\r\n        onNameChange={handleChangeName}\r\n        onPhoneChange={handleChangePhone}\r\n        onEmailChange={handleChangeEmail}\r\n        onSubmit={handleSubmit}\r\n        name={name}\r\n        phone={phone}\r\n        email={email}\r\n      />\r\n      <GetClientList handleSubmit={toggleSubmit} customers={customers} />,\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\Header.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\customerForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\customerList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\customers\\customerUpdate.js",["107","108","109"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBRow,\r\n  MDBInput,\r\n  MDBCol,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\n\r\nexport default function UpdateCustomer(props) {\r\n  const [customer, setCustomer] = useState({});\r\n  const [validation, setValidation] = useState({\r\n    phone: true,\r\n    email: true,\r\n  });\r\n\r\n  const id = props.forId;\r\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,})+$/;\r\n  const phoneRegex = /^[0-9]*$/;\r\n\r\n  // UPDATE ON id\r\n  useEffect(() => {\r\n    getCustomerbyId();\r\n  }, [id]);\r\n\r\n  async function getCustomerbyId() {\r\n    const res = await axios.get(`http://localhost:3001/clients/${id}`);\r\n    let data = res.data.response;\r\n    console.log(res);\r\n    if (data.length > 0) {\r\n      setCustomer({\r\n        name: data[0].c_name,\r\n        phone: data[0].phone,\r\n        email: data[0].email,\r\n      });\r\n    }\r\n\r\n    console.log(data);\r\n  }\r\n  // HANDLE UPDATE\r\n  async function updateCustomerDetails() {\r\n    let res = await axios.put(`http://localhost:3001/clients/${id}`, {\r\n      cName: customer.name,\r\n      phone: customer.phone,\r\n      email: customer.email,\r\n    });\r\n    console.log(res);\r\n  }\r\n  // HANDLE DELTE\r\n  async function deleteCustomer() {\r\n    await axios.delete(`http://localhost:3001/clients/${id}`);\r\n    props.handleSubmit();\r\n  }\r\n\r\n  function handleDelete() {\r\n    props.toggle();\r\n    confirmAlert({\r\n      title: \"Delete\",\r\n      message: \"Delete customer record?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            deleteCustomer();\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return;\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  // HANDLE SUBMIT\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validation.email) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n\r\n    if (!validation.phone) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n    updateCustomerDetails();\r\n    props.toggle();\r\n    props.handleSubmit();\r\n  };\r\n\r\n  //HANDEL INPUTS\r\n\r\n  const handleChangePhone = (e) => {\r\n    let phone = e.target.value;\r\n    if (phoneRegex.test(phone)) {\r\n      setCustomer((prev) => ({ ...prev, phone: phone }));\r\n      setValidation((prev) => ({ ...prev, phone: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, phone: phone }));\r\n      setValidation((prev) => ({ ...prev, phone: false }));\r\n    }\r\n  };\r\n  const handleChangeEmail = (e) => {\r\n    let email = e.target.value;\r\n    if (emailRegex.test(email)) {\r\n      setCustomer((prev) => ({ ...prev, email: email }));\r\n      setValidation((prev) => ({ ...prev, email: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, email: email }));\r\n      setValidation((prev) => ({ ...prev, email: false }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBContainer className=\"mt-5\">\r\n      <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n        <MDBModalHeader toggle={props.toggle}>Update Customer</MDBModalHeader>\r\n        <MDBModalBody>\r\n          <form\r\n            className=\"need-validation\"\r\n            id=\"update-user\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n          >\r\n            <MDBRow>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.name}\r\n                  name=\"full-name\"\r\n                  type=\"text\"\r\n                  id=\"formUpdateName\"\r\n                  label=\"Customer Name\"\r\n                  disabled\r\n                ></MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.phone}\r\n                  name=\"phone\"\r\n                  onChange={handleChangePhone}\r\n                  type=\"text\"\r\n                  pattern=\"[0-9]*\"\r\n                  maxLength=\"10\"\r\n                  id=\"formUpdatePhone\"\r\n                  label=\"Phone number\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\">Use numbers only!</div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.email}\r\n                  name=\"email\"\r\n                  onChange={handleChangeEmail}\r\n                  type=\"email\"\r\n                  id=\"formUpdateEmail\"\r\n                  label=\"Email\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\">\"example@example.com\"</div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </form>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"danger\" onClick={handleDelete}>\r\n            Delete\r\n          </MDBBtn>\r\n          <MDBBtn color=\"secondary\" onClick={props.toggle}>\r\n            Close\r\n          </MDBBtn>\r\n          <MDBBtn color=\"primary\" form=\"update-user\" type=\"submit\">\r\n            Save changes\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n}\r\n","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\suppliers\\Suppliers.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\suppliers\\supplierForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\suppliers\\supplierList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\workers\\Workers.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\workers\\WorkerForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\workers\\WorkerList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\Vehicles.js",["110"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { MDBContainer, MDBIcon } from \"mdbreact\";\r\nimport CreateVehicle from \"./VehicleForm\";\r\nimport GetVehicleList from \"./VehicleList\";\r\n\r\nfunction Vehicles() {\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [make, setMake] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [reg, setReg] = useState(\"\");\r\n  const [owner, setOwner] = useState(\"\");\r\n  const [submit, setSubmit] = useState(false);\r\n  const [validation, setValidation] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getVehicles() {\r\n      const res = await axios.get(\"http://localhost:3001/vehicles/\");\r\n      let data = res.data.response;\r\n      setVehicles(data);\r\n      console.log(data);\r\n    }\r\n    getVehicles();\r\n    setSubmit(false);\r\n  }, [submit]);\r\n\r\n  // HANDLE INPUTS\r\n  const handleChangeMake = (e) => {\r\n    let make = e.target.value;\r\n    setMake(make);\r\n  };\r\n  const handleChangeModel = (e) => {\r\n    let model = e.target.value;\r\n    setModel(model);\r\n  };\r\n  const handleChangeYear = (e) => {\r\n    let year = e.target.value;\r\n    setYear(year);\r\n  };\r\n  const handleChangeReg = (e) => {\r\n    let reg = e.target.value;\r\n    setReg(reg.toUpperCase());\r\n  };\r\n  const handleChangeOwner = (e) => {\r\n    let owner = e.target.value;\r\n    setOwner(owner);\r\n  };\r\n\r\n  // HANDLE SUBMIT\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(validation);\r\n    if (!make || !model || !year || !reg || !owner) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n    insertVehicle(); // create user API\r\n    clearFields(); // Clear input fields\r\n    toggleSubmit(); // Update list After Submit\r\n  };\r\n\r\n  function toggleSubmit() {\r\n    setSubmit(!submit);\r\n  }\r\n\r\n  async function insertVehicle() {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/vehicles/\", {\r\n        make: make,\r\n        model: model,\r\n        year: year,\r\n        reg: reg,\r\n        ownerId: owner,\r\n      });\r\n    } catch (error) {\r\n      alert(\"Vehicle Registration number already exist\");\r\n    }\r\n  }\r\n\r\n  function clearFields() {\r\n    setMake(\"\");\r\n    setModel(\"\");\r\n    setYear(\"\");\r\n    setReg(\"\");\r\n    setOwner(\"\");\r\n  }\r\n\r\n  return (\r\n    <MDBContainer className=\"mt-5\">\r\n      <MDBContainer className=\"d-flex flex-column align-items-center mb-3 \">\r\n        <MDBIcon size=\"5x\" icon=\"car\" />\r\n        <div>\r\n          <h1>Vehicles</h1>\r\n        </div>\r\n      </MDBContainer>\r\n      <CreateVehicle\r\n        onMakeChange={handleChangeMake}\r\n        onModelChange={handleChangeModel}\r\n        onYearChange={handleChangeYear}\r\n        onRegChange={handleChangeReg}\r\n        onOwnerChange={handleChangeOwner}\r\n        onSubmit={handleSubmit}\r\n        make={make}\r\n        model={model}\r\n        year={year}\r\n        reg={reg}\r\n        ownerId={owner}\r\n      />\r\n      <GetVehicleList handleSubmit={toggleSubmit} vehicles={vehicles} />,\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Vehicles;\r\n","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\VehicleForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\VehicleList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\vehicles\\VehicleUpdate.js",["111"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBRow,\r\n  MDBInput,\r\n  MDBCol,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\n\r\nexport default function UpdateVehicle(props) {\r\n  const [vehicle, setVehicle] = useState({\r\n    make: \"\",\r\n    model: \"\",\r\n    year: \"\",\r\n    reg: \"\",\r\n    ownerId: \"\",\r\n  });\r\n  const [validation, setValidation] = useState({\r\n    make: true,\r\n    model: true,\r\n    year: true,\r\n    reg: true,\r\n    owner: true,\r\n  });\r\n\r\n  const id = props.forId;\r\n\r\n  // UPDATE ON id\r\n  useEffect(() => {\r\n    getVehiclebyId();\r\n  }, [id]);\r\n\r\n  async function getVehiclebyId() {\r\n    const res = await axios.get(`http://localhost:3001/vehicles/${id}`);\r\n    let data = res.data.response;\r\n    console.log(data);\r\n    if (data.length > 0) {\r\n      setVehicle({\r\n        make: data[0].make,\r\n        model: data[0].model,\r\n        year: data[0].year,\r\n        reg: data[0].reg_num,\r\n        ownerId: data[0].customer_id,\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  // HANDLE UPDATE\r\n  async function updateVehicleDetails() {\r\n    let res = await axios.put(`http://localhost:3001/vehicles/${id}`, {\r\n      make: vehicle.make,\r\n      model: vehicle.model,\r\n      year: vehicle.year,\r\n      reg: vehicle.reg,\r\n      owner: vehicle.ownerId,\r\n    });\r\n    console.log(res);\r\n  }\r\n  // HANDLE DELTE\r\n  async function deleteVehicle() {\r\n    console.log(id);\r\n    await axios.delete(`http://localhost:3001/vehicles/${id}`);\r\n    props.handleSubmit();\r\n  }\r\n\r\n  function handleDelete() {\r\n    props.toggle();\r\n    confirmAlert({\r\n      title: \"Delete\",\r\n      message: \"Delete Vehicle record?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            deleteVehicle();\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return;\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  // HANDLE SUBMIT\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (Object.values(validation).includes(false)) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n\r\n    updateVehicleDetails();\r\n    props.toggle();\r\n    props.handleSubmit();\r\n  };\r\n\r\n  //HANDEL INPUTS\r\n\r\n  const handleChangeMake = (e) => {\r\n    let make = e.target.value;\r\n    if (make) {\r\n      setVehicle((prev) => ({ ...prev, make: make }));\r\n      setValidation((prev) => ({ ...prev, make: true }));\r\n    } else {\r\n      setVehicle((prev) => ({ ...prev, make: make }));\r\n      setValidation((prev) => ({ ...prev, make: false }));\r\n    }\r\n  };\r\n  const handleChangeModel = (e) => {\r\n    let model = e.target.value;\r\n    if (model) {\r\n      setVehicle((prev) => ({ ...prev, model: model }));\r\n      setValidation((prev) => ({ ...prev, model: true }));\r\n    } else {\r\n      setVehicle((prev) => ({ ...prev, model: model }));\r\n      setValidation((prev) => ({ ...prev, model: false }));\r\n    }\r\n  };\r\n  const handleChangeYear = (e) => {\r\n    const yRegex = /^[0-9]{1,4}$/;\r\n    let year = e.target.value;\r\n    if (year === \"\" || yRegex.test(year)) {\r\n      if (year) {\r\n        setVehicle((prev) => ({ ...prev, year: year }));\r\n        setValidation((prev) => ({ ...prev, year: true }));\r\n      } else {\r\n        setVehicle((prev) => ({ ...prev, year: year })); // allow clear the input field\r\n        setValidation((prev) => ({ ...prev, year: false }));\r\n      }\r\n    }\r\n  };\r\n  const handleChangeReg = (e) => {\r\n    let reg = e.target.value;\r\n    if (reg) {\r\n      setVehicle((prev) => ({ ...prev, reg: reg.toUpperCase() }));\r\n      setValidation((prev) => ({ ...prev, reg: true }));\r\n    } else {\r\n      setVehicle((prev) => ({ ...prev, reg: reg }));\r\n      setValidation((prev) => ({ ...prev, reg: false }));\r\n    }\r\n  };\r\n\r\n  //   const handleChangeOwner = (e) => {\r\n  //     let owner = e.target.value;\r\n  //     if (owner) {\r\n  //       setVehicle((prev) => ({ ...prev, ownerId: owner }));\r\n  //       setValidation((prev) => ({ ...prev, owner: true }));\r\n  //     } else {\r\n  //       setValidation((prev) => ({ ...prev, owner: false }));\r\n  //     }\r\n  //   };\r\n\r\n  return (\r\n    <MDBContainer className=\"mt-5\">\r\n      <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n        <MDBModalHeader toggle={props.toggle}>Update Vehicle</MDBModalHeader>\r\n        <MDBModalBody>\r\n          <form\r\n            className=\"need-validation\"\r\n            id=\"update-vehicle\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n          >\r\n            <MDBRow>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={vehicle.make}\r\n                  onChange={handleChangeMake}\r\n                  name=\"make\"\r\n                  type=\"text\"\r\n                  id=\"formUpdateMake\"\r\n                  label=\"Vehicle Make\"\r\n                ></MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={vehicle.model}\r\n                  name=\"model\"\r\n                  onChange={handleChangeModel}\r\n                  type=\"text\"\r\n                  id=\"formUpdateModel\"\r\n                  label=\"Phone number\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\">Use numbers only!</div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={vehicle.year}\r\n                  name=\"year\"\r\n                  onChange={handleChangeYear}\r\n                  type=\"text\"\r\n                  id=\"formUpdateYear\"\r\n                  label=\"Year\"\r\n                  required\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\">Required*</div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={vehicle.reg}\r\n                  name=\"reg\"\r\n                  onChange={handleChangeReg}\r\n                  type=\"text\"\r\n                  id=\"formUpdateReg\"\r\n                  label=\"Reg Number\"\r\n                  required\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\">Required*</div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <div className=\"d-flex mt-4\">\r\n                  <p>Owned by {props.c_name}</p>\r\n                </div>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </form>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"danger\" onClick={handleDelete}>\r\n            Delete\r\n          </MDBBtn>\r\n          <MDBBtn color=\"secondary\" onClick={props.toggle}>\r\n            Close\r\n          </MDBBtn>\r\n          <MDBBtn color=\"primary\" form=\"update-vehicle\" type=\"submit\">\r\n            Save changes\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n}\r\n","C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\Orders.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\OrdersForm.js",["112"],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\orderPartlist.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\js\\helpers.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\OrdersList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\src\\components\\orders\\PartModal.js",["113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":15,"column":29,"nodeType":"120","messageId":"121","endLine":15,"endColumn":30,"suggestions":"122"},{"ruleId":"118","severity":1,"message":"119","line":15,"column":45,"nodeType":"120","messageId":"121","endLine":15,"endColumn":46,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"119","line":24,"column":29,"nodeType":"120","messageId":"121","endLine":24,"endColumn":30,"suggestions":"124"},{"ruleId":"118","severity":1,"message":"119","line":24,"column":45,"nodeType":"120","messageId":"121","endLine":24,"endColumn":46,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":30,"column":6,"nodeType":"128","endLine":30,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":15,"column":22,"nodeType":"132","messageId":"133","endLine":15,"endColumn":35},{"ruleId":"126","severity":1,"message":"134","line":37,"column":6,"nodeType":"128","endLine":37,"endColumn":10,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"136","line":35,"column":6,"nodeType":"128","endLine":35,"endColumn":24,"suggestions":"137"},{"ruleId":"126","severity":1,"message":"138","line":40,"column":6,"nodeType":"128","endLine":40,"endColumn":13,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["142","143"],["144","145"],["146","147"],["148","149"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomerbyId'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-unused-vars","'setValidation' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getVehiclebyId'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'handleVehicle'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'getSuppliersList'. Either include it or remove the dependency array.",["153"],"no-global-assign","no-unsafe-negation",{"messageId":"154","fix":"155","desc":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"157","fix":"161","desc":"159"},{"messageId":"154","fix":"162","desc":"156"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"154","fix":"164","desc":"156"},{"messageId":"157","fix":"165","desc":"159"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"removeEscape",{"range":"174","text":"175"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"176","text":"177"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"178","text":"175"},{"range":"179","text":"177"},{"range":"180","text":"175"},{"range":"181","text":"177"},{"range":"182","text":"175"},{"range":"183","text":"177"},"Update the dependencies array to be: [getCustomerbyId, id]",{"range":"184","text":"185"},"Update the dependencies array to be: [getVehiclebyId, id]",{"range":"186","text":"187"},"Update the dependencies array to be: [handleVehicle, props.customerId]",{"range":"188","text":"189"},"Update the dependencies array to be: [getSuppliersList, modal]",{"range":"190","text":"191"},[558,559],"",[558,558],"\\",[574,575],[574,574],[545,546],[545,545],[561,562],[561,561],[692,696],"[getCustomerbyId, id]",[716,720],"[getVehiclebyId, id]",[867,885],"[handleVehicle, props.customerId]",[733,740],"[getSuppliersList, modal]"]