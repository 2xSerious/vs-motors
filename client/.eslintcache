[{"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\index.js":"1","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\App.js":"2","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\reportWebVitals.js":"3","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\Customers.js":"4","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\suppliers\\Suppliers.js":"5","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\Header.js":"6","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\workers\\Workers.js":"7","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\Vehicles.js":"8","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\Orders.js":"9","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\Services.js":"10","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\customerForm.js":"11","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\customerList.js":"12","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\workers\\WorkerForm.js":"13","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\suppliers\\supplierList.js":"14","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\suppliers\\supplierForm.js":"15","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\workers\\WorkerList.js":"16","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\VehicleList.js":"17","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\ServiceForm.js":"18","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\VehicleForm.js":"19","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\OrdersList.js":"20","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\OrdersForm.js":"21","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\ServiceList.js":"22","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\customerUpdate.js":"23","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\VehicleUpdate.js":"24","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\PartModal.js":"25","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\orderPartlist.js":"26","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\InvoiceModal.js":"27","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\ServiceModal.js":"28","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\host.js":"29"},{"size":881,"mtime":1633776533596,"results":"30","hashOfConfig":"31"},{"size":1065,"mtime":1635949950320,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":4145,"mtime":1636022621693,"results":"34","hashOfConfig":"31"},{"size":1934,"mtime":1636021603852,"results":"35","hashOfConfig":"31"},{"size":1083,"mtime":1635771745521,"results":"36","hashOfConfig":"31"},{"size":2470,"mtime":1636020785837,"results":"37","hashOfConfig":"31"},{"size":2965,"mtime":1636011203132,"results":"38","hashOfConfig":"31"},{"size":2217,"mtime":1636046153894,"results":"39","hashOfConfig":"31"},{"size":1045,"mtime":1635771705607,"results":"40","hashOfConfig":"31"},{"size":3831,"mtime":1636021825762,"results":"41","hashOfConfig":"31"},{"size":1636,"mtime":1635834219183,"results":"42","hashOfConfig":"31"},{"size":989,"mtime":1635771188318,"results":"43","hashOfConfig":"31"},{"size":1777,"mtime":1636020894140,"results":"44","hashOfConfig":"31"},{"size":999,"mtime":1635771170431,"results":"45","hashOfConfig":"31"},{"size":1784,"mtime":1636020854015,"results":"46","hashOfConfig":"31"},{"size":1938,"mtime":1635834245011,"results":"47","hashOfConfig":"31"},{"size":7121,"mtime":1636043456176,"results":"48","hashOfConfig":"31"},{"size":4577,"mtime":1636022708924,"results":"49","hashOfConfig":"31"},{"size":3550,"mtime":1636023315953,"results":"50","hashOfConfig":"31"},{"size":10136,"mtime":1636023309036,"results":"51","hashOfConfig":"31"},{"size":4419,"mtime":1636034916975,"results":"52","hashOfConfig":"31"},{"size":9094,"mtime":1636010632678,"results":"53","hashOfConfig":"31"},{"size":7194,"mtime":1636022880218,"results":"54","hashOfConfig":"31"},{"size":6226,"mtime":1636010783431,"results":"55","hashOfConfig":"31"},{"size":901,"mtime":1635771122634,"results":"56","hashOfConfig":"31"},{"size":1451,"mtime":1636105227165,"results":"57","hashOfConfig":"31"},{"size":7312,"mtime":1636104354235,"results":"58","hashOfConfig":"31"},{"size":70,"mtime":1636105487357,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1pwokan",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\index.js",[],["122","123"],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\App.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\reportWebVitals.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\Customers.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\suppliers\\Suppliers.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\Header.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\workers\\Workers.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\Vehicles.js",["124"],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { MDBContainer, MDBIcon } from \"mdbreact\";\r\nimport CreateVehicle from \"./VehicleForm\";\r\nimport GetVehicleList from \"./VehicleList\";\r\nimport { host } from \"../host\";\r\n\r\nfunction Vehicles() {\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [make, setMake] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [reg, setReg] = useState(\"\");\r\n  const [owner, setOwner] = useState(\"\");\r\n  const [submit, setSubmit] = useState(false);\r\n  const url = host.url;\r\n  useEffect(() => {\r\n    async function getVehicles() {\r\n      const res = await axios.get(`${url}/vehicles/`);\r\n      let data = res.data.response;\r\n      setVehicles(data);\r\n    }\r\n    getVehicles();\r\n    setSubmit(false);\r\n  }, [submit]);\r\n\r\n  // HANDLE INPUTS\r\n  const handleChangeMake = (e) => {\r\n    let make = e.target.value;\r\n    setMake(make);\r\n  };\r\n  const handleChangeModel = (e) => {\r\n    let model = e.target.value;\r\n    setModel(model);\r\n  };\r\n  const handleChangeYear = (e) => {\r\n    let year = e.target.value;\r\n    setYear(year);\r\n  };\r\n  const handleChangeReg = (e) => {\r\n    let reg = e.target.value;\r\n    setReg(reg.toUpperCase());\r\n  };\r\n  const handleChangeOwner = (e) => {\r\n    let owner = e.target.value;\r\n    setOwner(owner);\r\n  };\r\n\r\n  // HANDLE SUBMIT\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!make || !model || !year || !reg || !owner) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n    insertVehicle(); // create user API\r\n    clearFields(); // Clear input fields\r\n    toggleSubmit(); // Update list After Submit\r\n  };\r\n\r\n  function toggleSubmit() {\r\n    setSubmit(!submit);\r\n  }\r\n\r\n  async function insertVehicle() {\r\n    try {\r\n      await axios.post(`${url}/vehicles/`, {\r\n        make: make,\r\n        model: model,\r\n        year: year,\r\n        reg: reg,\r\n        ownerId: owner,\r\n      });\r\n    } catch (error) {\r\n      alert(\"Vehicle Registration number already exist\");\r\n    }\r\n  }\r\n\r\n  function clearFields() {\r\n    setMake(\"\");\r\n    setModel(\"\");\r\n    setYear(\"\");\r\n    setReg(\"\");\r\n    setOwner(\"\");\r\n  }\r\n\r\n  return (\r\n    <MDBContainer className=\"mt-5\">\r\n      <MDBContainer className=\"d-flex flex-column align-items-center mb-3 \">\r\n        <MDBIcon size=\"5x\" icon=\"car\" />\r\n        <div>\r\n          <h1>Vehicles</h1>\r\n        </div>\r\n      </MDBContainer>\r\n      <CreateVehicle\r\n        onMakeChange={handleChangeMake}\r\n        onModelChange={handleChangeModel}\r\n        onYearChange={handleChangeYear}\r\n        onRegChange={handleChangeReg}\r\n        onOwnerChange={handleChangeOwner}\r\n        onSubmit={handleSubmit}\r\n        make={make}\r\n        model={model}\r\n        year={year}\r\n        reg={reg}\r\n        ownerId={owner}\r\n      />\r\n      <GetVehicleList handleSubmit={toggleSubmit} vehicles={vehicles} />,\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Vehicles;\r\n","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\Orders.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\Services.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\customerForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\customerList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\workers\\WorkerForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\suppliers\\supplierList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\suppliers\\supplierForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\workers\\WorkerList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\VehicleList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\ServiceForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\VehicleForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\OrdersList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\OrdersForm.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\ServiceList.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\customers\\customerUpdate.js",["125"],"import { useEffect, useState } from \"react\";\r\nimport { host } from \"../host\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBRow,\r\n  MDBInput,\r\n  MDBCol,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nexport default function UpdateCustomer(props) {\r\n  const [customer, setCustomer] = useState({});\r\n  const [validation, setValidation] = useState({\r\n    phone: true,\r\n    email: true,\r\n    address: true,\r\n    city: true,\r\n    postcode: true,\r\n    country: true,\r\n  });\r\n  const url = host.url;\r\n  const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,})+$/;\r\n  const phoneRegex = /^[0-9]*$/;\r\n\r\n  // UPDATE ON id\r\n  useEffect(() => {\r\n    async function getCustomerbyId() {\r\n      const res = await axios.get(`${url}/clients/${props.forId}`);\r\n      let data = res.data.response;\r\n      console.log(res);\r\n      if (data.length > 0) {\r\n        setCustomer({\r\n          name: data[0].c_name,\r\n          phone: data[0].phone,\r\n          email: data[0].email,\r\n          address: data[0].street_address,\r\n          city: data[0].city,\r\n          postcode: data[0].postcode,\r\n          country: data[0].country,\r\n        });\r\n      }\r\n    }\r\n    getCustomerbyId();\r\n  }, [props.forId]);\r\n\r\n  // HANDLE UPDATE\r\n  async function updateCustomerDetails() {\r\n    let res = await axios.put(`${url}/clients/${props.forId}`, {\r\n      cName: customer.name,\r\n      phone: customer.phone,\r\n      email: customer.email,\r\n      address: customer.address,\r\n      city: customer.city,\r\n      postcode: customer.postcode,\r\n      country: customer.country,\r\n    });\r\n    console.log(res);\r\n  }\r\n  // HANDLE DELTE\r\n  async function deleteCustomer() {\r\n    await axios\r\n      .delete(`${url}/clients/${props.forId}`)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err))\r\n      .then(() => {\r\n        props.handleSubmit();\r\n      });\r\n  }\r\n\r\n  function handleDelete() {\r\n    props.toggle();\r\n    confirmAlert({\r\n      title: \"Delete\",\r\n      message: \"Delete customer record?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            deleteCustomer();\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return;\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  // HANDLE SUBMIT\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validation.email) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n\r\n    if (!validation.phone) {\r\n      e.target.className += \" was-validated\";\r\n      return;\r\n    }\r\n    updateCustomerDetails();\r\n    props.toggle();\r\n    props.handleSubmit();\r\n  };\r\n\r\n  //HANDEL INPUTS\r\n\r\n  const handleChangePhone = (e) => {\r\n    let phone = e.target.value;\r\n    if (phoneRegex.test(phone)) {\r\n      setCustomer((prev) => ({ ...prev, phone: phone }));\r\n      setValidation((prev) => ({ ...prev, phone: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, phone: phone }));\r\n      setValidation((prev) => ({ ...prev, phone: false }));\r\n    }\r\n  };\r\n  const handleChangeEmail = (e) => {\r\n    let email = e.target.value;\r\n    if (emailRegex.test(email)) {\r\n      setCustomer((prev) => ({ ...prev, email: email }));\r\n      setValidation((prev) => ({ ...prev, email: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, email: email }));\r\n      setValidation((prev) => ({ ...prev, email: false }));\r\n    }\r\n  };\r\n  const handleChangeAddress = (e) => {\r\n    let address = e.target.value;\r\n    if (address) {\r\n      setCustomer((prev) => ({ ...prev, address: address }));\r\n      setValidation((prev) => ({ ...prev, address: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, address: address }));\r\n      setValidation((prev) => ({ ...prev, address: false }));\r\n    }\r\n  };\r\n  const handleChangeCity = (e) => {\r\n    let city = e.target.value;\r\n    if (city) {\r\n      setCustomer((prev) => ({ ...prev, city: city }));\r\n      setValidation((prev) => ({ ...prev, city: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, city: city }));\r\n      setValidation((prev) => ({ ...prev, city: false }));\r\n    }\r\n  };\r\n  const handleChangePostcode = (e) => {\r\n    let postcode = e.target.value;\r\n    if (postcode) {\r\n      setCustomer((prev) => ({ ...prev, postcode: postcode }));\r\n      setValidation((prev) => ({ ...prev, postcode: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, postcode: postcode }));\r\n      setValidation((prev) => ({ ...prev, postcode: false }));\r\n    }\r\n  };\r\n  const handleChangeCountry = (e) => {\r\n    let country = e.target.value;\r\n    if (country) {\r\n      setCustomer((prev) => ({ ...prev, country: country }));\r\n      setValidation((prev) => ({ ...prev, country: true }));\r\n    } else {\r\n      setCustomer((prev) => ({ ...prev, country: country }));\r\n      setValidation((prev) => ({ ...prev, country: false }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBContainer className=\"mt-5\">\r\n      <MDBModal isOpen={props.modal} toggle={props.toggle}>\r\n        <MDBModalHeader toggle={props.toggle}>Update Customer</MDBModalHeader>\r\n        <MDBModalBody>\r\n          <form\r\n            className=\"need-validation\"\r\n            id=\"update-user\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n          >\r\n            <MDBRow>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.name}\r\n                  name=\"full-name\"\r\n                  type=\"text\"\r\n                  id=\"formUpdateName\"\r\n                  label=\"Customer Name\"\r\n                  disabled\r\n                ></MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.phone}\r\n                  name=\"phone\"\r\n                  onChange={handleChangePhone}\r\n                  type=\"text\"\r\n                  pattern=\"[0-9]*\"\r\n                  maxLength=\"10\"\r\n                  id=\"formUpdatePhone\"\r\n                  label=\"Phone number\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\">Use numbers only!</div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.email}\r\n                  name=\"email\"\r\n                  onChange={handleChangeEmail}\r\n                  type=\"email\"\r\n                  id=\"formUpdateEmail\"\r\n                  label=\"Email\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\">\"example@example.com\"</div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.address}\r\n                  name=\"address\"\r\n                  onChange={handleChangeAddress}\r\n                  type=\"text\"\r\n                  label=\"Address\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\"></div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.city}\r\n                  name=\"city\"\r\n                  onChange={handleChangeCity}\r\n                  type=\"text\"\r\n                  label=\"City\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\"></div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.postcode}\r\n                  name=\"psotcode\"\r\n                  onChange={handleChangePostcode}\r\n                  type=\"text\"\r\n                  label=\"Postcode\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\"></div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <MDBInput\r\n                  value={customer.country}\r\n                  name=\"country\"\r\n                  onChange={handleChangeCountry}\r\n                  type=\"text\"\r\n                  label=\"Country\"\r\n                >\r\n                  <div className=\"valid-feedback\">Looks Good!</div>\r\n                  <div className=\"invalid-feedback\"></div>\r\n                </MDBInput>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </form>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"danger\" onClick={handleDelete}>\r\n            Delete\r\n          </MDBBtn>\r\n          <MDBBtn color=\"secondary\" onClick={props.toggle}>\r\n            Close\r\n          </MDBBtn>\r\n          <MDBBtn color=\"primary\" form=\"update-user\" type=\"submit\">\r\n            Save changes\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n}\r\n","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\vehicles\\VehicleUpdate.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\PartModal.js",["126"],"import { useEffect, useState } from \"react\";\r\nimport { host } from \"../host\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalHeader,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n  MDBTable,\r\n  MDBTableHead,\r\n  MDBTableBody,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\n\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  InputAdornment,\r\n  IconButton,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst PartModal = ({ modal, toggleModal, orderId, parts, partsList }) => {\r\n  let count = 1;\r\n  const [part, setPart] = useState({\r\n    supplierId: 0,\r\n    quantity: 1,\r\n    name: \"\",\r\n    value: \"\",\r\n    valueVat: 0,\r\n    orderId: 0,\r\n  });\r\n\r\n  const [suppliers, setSuppliers] = useState();\r\n  const url = host.url;\r\n  useEffect(() => {\r\n    async function getSuppliersList() {\r\n      const res = await axios.get(`${url}/suppliers`);\r\n      const data = res.data.response;\r\n      setSuppliers(data);\r\n      setPart((prev) => ({ ...prev, orderId: orderId }));\r\n    }\r\n    getSuppliersList();\r\n  }, [modal, orderId]);\r\n\r\n  // HANDLER PART STATE\r\n  function handleChangeSupplier(e) {\r\n    setPart((prev) => ({ ...prev, supplierId: e.target.value }));\r\n  }\r\n  function handleChangeName(e) {\r\n    setPart((prev) => ({ ...prev, name: e.target.value }));\r\n  }\r\n  function handleQuantity(e) {\r\n    setPart((prev) => ({ ...prev, quantity: e.target.value }));\r\n  }\r\n  function handleChangeValue(e) {\r\n    const vRegex = /^\\d+\\.?\\d{0,2}$/;\r\n    let value = e.target.value;\r\n    if (!value || vRegex.test(value)) {\r\n      setPart((prev) => ({ ...prev, value: value, valueVat: value * 1.2 }));\r\n    }\r\n  }\r\n\r\n  // Handle Submit\r\n\r\n  function onSubmitPart(e) {\r\n    e.preventDefault();\r\n    addPart();\r\n  }\r\n  async function addPart() {\r\n    let res = await axios.post(`${url}/parts/add`, {\r\n      name: part.name,\r\n      quantity: part.quantity,\r\n      value: part.value,\r\n      valueVat: part.valueVat,\r\n      orderId: part.orderId,\r\n      supplierId: part.supplierId,\r\n    });\r\n\r\n    if (res.status === 200) {\r\n      partsList(part.orderId);\r\n      setPart((prev) => ({ ...prev, name: \"\" }));\r\n      setPart((prev) => ({ ...prev, quantity: 1 }));\r\n      setPart((prev) => ({ ...prev, value: \"\" }));\r\n      setPart((prev) => ({ ...prev, valueVat: 0 }));\r\n    }\r\n  }\r\n\r\n  // HANDLE DELTE\r\n  function handleDeletePart(e) {\r\n    e.preventDefault();\r\n    let id = e.currentTarget.getAttribute(\"id\");\r\n    console.log(id);\r\n    deletePart(id);\r\n  }\r\n\r\n  async function deletePart(id) {\r\n    let res = await axios.delete(`${url}/parts/${id}`);\r\n    if (res.status === 200) {\r\n      partsList(part.orderId);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBModal isOpen={modal} toggle={toggleModal} backdrop={false}>\r\n        <MDBModalHeader toggle={toggleModal}>Parts</MDBModalHeader>\r\n        <MDBModalBody>\r\n          <form id=\"add-part\" onSubmit={onSubmitPart}>\r\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n              <InputLabel htmlFor=\"supplier-select\">Supplier</InputLabel>\r\n              <Select\r\n                id=\"supplier-select\"\r\n                label=\"Supplier\"\r\n                value={part.supplierId}\r\n                onChange={handleChangeSupplier}\r\n              >\r\n                {suppliers ? (\r\n                  suppliers.map((e) => {\r\n                    return (\r\n                      <MenuItem key={e.id} value={e.id}>\r\n                        {e.s_name}\r\n                      </MenuItem>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div>Loading...</div>\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"standard\" sx={{ m: 1, maxWidth: 100 }}>\r\n              <InputLabel htmlFor=\"part\">Part</InputLabel>\r\n              <Input id=\"part\" value={part.name} onChange={handleChangeName} />\r\n            </FormControl>\r\n            <FormControl variant=\"standard\" sx={{ m: 1, maxWidth: 100 }}>\r\n              <InputLabel htmlFor=\"part\">Quantity</InputLabel>\r\n              <Input\r\n                id=\"part\"\r\n                value={part.quantity}\r\n                onChange={handleQuantity}\r\n              />\r\n            </FormControl>\r\n            <FormControl variant=\"standard\" sx={{ m: 1, maxWidth: 60 }}>\r\n              <InputLabel htmlFor=\"value\">Value</InputLabel>\r\n              <Input\r\n                id=\"value\"\r\n                value={part.value}\r\n                onChange={handleChangeValue}\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">£</InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <FormControl sx={{ m: 3, maxWidth: 60 }}>\r\n              <IconButton type=\"submit\" form=\"add-part\">\r\n                <MDBIcon icon=\"plus\" />\r\n              </IconButton>\r\n            </FormControl>\r\n          </form>\r\n          <MDBTable>\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Part</th>\r\n                <th>Value</th>\r\n                <th>Order #</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {parts.map((e) => {\r\n                return (\r\n                  <tr key={e.p_name + \"-\" + e.id + \"-\" + e.order_id} id={e.id}>\r\n                    <td>{count++}</td>\r\n                    <td>{e.p_name}</td>\r\n                    <td>\r\n                      £{e.cost} / vat £{e.cost_vat}\r\n                    </td>\r\n                    <td>{e.order_id}</td>\r\n                    <td>\r\n                      <IconButton\r\n                        type=\"button\"\r\n                        id={e.id}\r\n                        onClick={handleDeletePart}\r\n                      >\r\n                        <MDBIcon icon=\"times\" />\r\n                      </IconButton>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"success\" onClick={toggleModal}>\r\n            ok\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default PartModal;\r\n","C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\orders\\orderPartlist.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\InvoiceModal.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\service-sheet\\ServiceModal.js",[],"C:\\Users\\King\\Documents\\Projects\\vs-motors\\client\\src\\components\\host.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":25,"column":6,"nodeType":"133","endLine":25,"endColumn":14,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"132","line":49,"column":6,"nodeType":"133","endLine":49,"endColumn":19,"suggestions":"135"},{"ruleId":"131","severity":1,"message":"132","line":48,"column":6,"nodeType":"133","endLine":48,"endColumn":22,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["139"],["140"],["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [submit, url]",{"range":"148","text":"149"},"Update the dependencies array to be: [props.forId, url]",{"range":"150","text":"151"},"Update the dependencies array to be: [modal, orderId, url]",{"range":"152","text":"153"},[832,840],"[submit, url]",[1290,1303],"[props.forId, url]",[1029,1045],"[modal, orderId, url]"]